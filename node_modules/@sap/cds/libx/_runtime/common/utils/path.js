const cds = require('../../cds')
const { ensureNoDraftsSuffix } = require('./draft')

/*
 * returns path like <service>.<entity>:<prop1>.<prop2> for ref = [{ id: '<service>.<entity>' }, '<prop1>', '<prop2>']
 */
const getPathFromRef = ref => {
  const x = ref.reduce((acc, cur) => {
    acc += (acc ? ':' : '') + (cur.id ? cur.id : cur)
    return acc
  }, '')
  const y = x.split(':')
  let z = y.shift()
  if (y.length) z += ':' + y.join('.')
  return z
}

/*
 * returns the target entity for the given path
 */
const getEntityFromPath = (path, def) => {
  let current = def.definitions ? { elements: def.definitions } : def
  path = typeof path === 'string' ? cds.parse.path(path) : path
  const segments = [...path.ref]
  while (segments.length) {
    let segment = segments.shift()
    if (segment.id && typeof segment.id === 'string') {
      segment.id = ensureNoDraftsSuffix(segment.id)
    } else if (typeof segment === 'string') {
      segment = ensureNoDraftsSuffix(segment)
    }
    current = current.elements[segment.id || segment]
    if (current && current.target) current = current._target
  }
  return current
}

module.exports = {
  getPathFromRef,
  getEntityFromPath
}
